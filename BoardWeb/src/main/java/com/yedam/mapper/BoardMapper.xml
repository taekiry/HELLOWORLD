<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mapper.BoardMapper">

	<!-- 조회(selectList) resultType Aliass config에 설정해둬서 원래는 com.yedam.vo.BoardVO -->
	<select id="selectList" resultType="Board">
		select * from tbl_board
		order by board_no asc
	
	<!-- 조회 with Paging  ![CDATA[]] query AND <=의 오류 처리**"텍스트 그대로 해석하라"**-->
	</select>
	<select id="selectListWithPaging" resultType="Board" parameterType="Search">
	select b.*
	from (select rownum rn, a.*
     	  from  (select *
                 from tbl_board
                 <choose>
                 	<when test="searchCondition != null and searchCondition == 'T'.toString()">
                 	where title like '%'||#{keyword}||'%'
                 	</when>
                 	<when test="searchCondition != null and searchCondition == 'W'.toString()">
                 	where writer like '%'||#{keyword}||'%'
                 	</when>
                 	<when test="searchCondition != null and searchCondition == 'TW'.toString()">
                 	where (writer like '%'||#{keyword}||'%') or (title like '%'||#{keyword}||'%')
                 	</when>
                 </choose>
                 order by board_no desc) a) b
	      where b.rn > (#{page}-1) * 5
	 <![CDATA[
	and   b.rn <= #{page} * 5
	]]>
	</select>
	
	<!-- 상세조회(한건) -->
	<select id="selectBoard" resultType="Board" parameterType="int">
		select board_no,
		title,
		content,
		writer,
		write_date,
		read_cnt
		from tbl_board
		where board_no = #{bno}
	</select>

	<!-- 조회수 증가 -->
	<update id="updateReadCnt" parameterType="int">
		update tbl_board
		set    read_cnt = read_cnt + 1
		where board_no = #{bno}
	</update>

	<!-- 등록(insertBoard) -->
	<!-- boardVO의 필드값들을 #{}로 작성 board_no는 시퀀스썻으니, 반환값은 건수 int임. -->
	<insert id="insertBoard" parameterType="Board">
		insert into tbl_board( board_no,
		title,
		content,
		writer)
		values (board_seq.nextval,
		#{title},
		#{content},
		#{writer})
	</insert>

	<!-- 수정(updateBoard) -->
	<!-- title = nvl(#{title}, title)와 같음 if태그 콤마도 if문안에 영향받아서 writer가 널이되면 
		컴마 있는상태로 쿼리로 넘어가서 에러 따라서 set을 태그처리 알아서 컴마처리 -->
	<update id="updateBoard" parameterType="Board">
		update tbl_board
		<set>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			<if test="writer != null">
				writer = #{writer}
			</if>
		</set>
		where board_no = #{boardNo}
	</update>

	<!-- 삭제(deleteBoard) parameterType="int" -->
	<delete id="deleteBoard" parameterType="int">
		delete tbl_board
		where board_no = #{boardNo}
	</delete>
	
	<!-- 전체 글 개수 -->
	<select id="selectCount" resultType="int" parameterType="Search">
		select count(*)
		from tbl_board
		<choose>
          <when test="searchCondition != null and searchCondition == 'T'.toString()">
                      where title like '%'||#{keyword}||'%'
          </when>
          <when test="searchCondition != null and searchCondition == 'W'.toString()">
                 	 where writer like '%'||#{keyword}||'%'
          </when>
          <when test="searchCondition != null and searchCondition == 'TW'.toString()">
                 	where (writer like '%'||#{keyword}||'%') or (title like '%'||#{keyword}||'%')
          </when>
        </choose>
	</select>
	<!-- 파이차트 만들기 위한 SQL문 -->
	<select id="selectUserByCount" resultType="map">
	select writer as "writer"
	      ,member_name as "memberName"
	      ,count(1) as "cnt"
	from tbl_board b join tbl_member m 
	on b.writer = m.member_id
	group by writer,member_name
	</select>
</mapper>